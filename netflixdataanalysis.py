# -*- coding: utf-8 -*-
"""NetflixDataAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xBBcCyJQEZ2nDNivzsCmts2P4XkYhgQ8
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('moviedb.csv', lineterminator='\n')

"""# DATA EXPLORATION"""

df.head()

df.info()

#need to change Release_Date Dtype from object(String) to Date type

df['Genre'].head()

#need to remove whitespace after comma and before genre

#check for duplicate values
df.duplicated().sum()

df.describe()

#also we don't need the overview, poster_url and language features, removing them

"""## Exploration Summary


*   Dataframe consists of 9827 rows and 9 columns.
*   Dataset does not contain NaNs or duplicate values.
*   Release_Date column must be casted into date-time data type and only the year must be extracted.
*   Overview, Original_Language and Poster_url columns will be dropped as they are not of use.
*  Set categorization for Vote_Average
*   Genre column has comma seperated values and whitespaces which needs to be handled and must be castedinto Category

# PREPROCESSING DATA
"""

#casting Release_Date to datetime
df['Release_Date'] = pd.to_datetime(df['Release_Date'])

print(df['Release_Date'].dtypes)

#only retaining the Release Year
df['Release_Date'] = df['Release_Date'].dt.year

df['Release_Date'].dtypes

df.head()

#dropping the colums: overview, original_language, poster_url
cols = ['Overview', 'Original_Language', 'Poster_Url']
df.drop(cols, axis=1, inplace=True)
df.columns

df.head()

"""Categorizing "Vote_Average" column

Making 4 categories:

*   Popular
*   Average
*   Below_Average
*   Not_Popular




"""

def categorize_col(df, col, labels):
  edges = [df[col].describe()['min'],
           df[col].describe()['25%'],
           df[col].describe()['50%'],
           df[col].describe()['75%'],
           df[col].describe()['max']]

  df[col] = pd.cut(df[col], edges, labels= labels, duplicates='drop')
  return df

labels = ['not_popular', 'below_average', 'average', 'popular']
categorize_col(df, 'Vote_Average', labels)

df['Vote_Average'].unique()

df.head()

df['Vote_Average'].value_counts()

#dropping null values(if any)
df.dropna(inplace=True)

df.isna().sum()

df.head()

"""Handling whitespaces in Genre column"""

#spliting the genres into a list
#then explode dataframe to have only one genre per row for each movie
df['Genre'] = df['Genre'].str.split(', ')
df = df.explode('Genre').reset_index(drop=True)

df.head(10)

#casting genre column into category

df['Genre'] = df['Genre'].astype('category')
df['Genre'].dtypes

df.info()

df.nunique()

"""# DATA VISUALIZATION


"""

sns.set_style('whitegrid')

#MOST FREQUENT GENRE OF MOVIES RELEASED ON NETFLIX

df['Genre'].describe()

sns.catplot(y='Genre', data = df, kind = 'count',
            order = df['Genre'].value_counts().index,
            color = '#4287f5')
plt.title("Genre Distribution")
plt.show()

#HIGHEST VOTES IN VOTE AVERAGE COLUMN

sns.catplot(y='Vote_Average', data=df, kind='count',
            order=df['Vote_Average'].value_counts().index, color='#4287f5')

plt.title("Votes Distribution")
plt.show()

#MOST POPULAR MOVIE AND ITS GENRE

df[df['Popularity']==df['Popularity'].max()]

#LEAST POPULAR MOVIE AND ITS GENRE

df[df['Popularity']==df['Popularity'].min()]

#YEAR HAVING MOST MOVIES RELEASED

df['Release_Date'].hist()
plt.title("Release Year Distribution")
plt.show()